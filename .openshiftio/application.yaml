apiVersion: v1
kind: Template
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    value: 'https://github.com/dummy_org/dummy_repo'
    required: true
  - name: GITHUB_WEBHOOK_SECRET
    description: The secret used to configure a GitHub webhook
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: mytest-database-bind
      labels:
        app: mytest
    stringData:
      uri: mytest-database
      database: my_data
      user: dbuser
      password: secret
  - kind: ImageStreamTag
    apiVersion: v1
    metadata:
      name: 'mytest-database:9.6'
      creationTimestamp: null
      labels:
        app: mytest
    tag:
      name: '9.6'
      annotations: null
      from:
        kind: DockerImage
        name: '172.30.1.1:5000/openshift/postgresql:9.6'
      generation: null
      importPolicy: {}
      referencePolicy:
        type: ''
    generation: 0
    lookupPolicy:
      local: false
    image:
      metadata:
        creationTimestamp: null
      dockerImageMetadata:
        kind: DockerImage
        apiVersion: '1.0'
        Id: ''
        Created: null
        ContainerConfig: {}
      dockerImageMetadataVersion: '1.0'
      dockerImageLayers: null
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: mytest-database
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      strategy:
        resources: {}
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mytest-database
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: 'postgresql:9.6'
      replicas: 1
      test: false
      selector:
        app: placeholder-app-label-d46881878f594a2dadfd963843452aab
        deploymentconfig: mytest-database
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: placeholder-app-label-d46881878f594a2dadfd963843452aab
            deploymentconfig: mytest-database
        spec:
          volumes:
            - name: mytest-database-volume-1
              emptyDir: {}
          containers:
            - name: mytest-database
              image: '172.30.1.1:5000/openshift/postgresql:9.6'
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources: {}
              volumeMounts:
                - name: mytest-database-volume-1
                  mountPath: /var/lib/pgsql/data
              env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: database
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: password
    status:
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      updatedReplicas: 0
      availableReplicas: 0
      unavailableReplicas: 0
  - kind: Service
    apiVersion: v1
    metadata:
      name: mytest-database
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      ports:
        - name: 5432-tcp
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        app: placeholder-app-label-d46881878f594a2dadfd963843452aab
        deploymentconfig: mytest-database
    status:
      loadBalancer: {}
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: openjdk18-openshift
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
          generation: null
          importPolicy: {}
          referencePolicy:
            type: ''
    status:
      dockerImageRepository: ''
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mytest-service
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: ''
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mytest-service
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      triggers:
        - type: GitHub
          github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
      source:
        type: Git
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'openjdk18-openshift:latest'
          incremental: true
      output:
        to:
          kind: ImageStreamTag
          name: 'mytest-service:latest'
      resources: {}
      postCommit: {}
      nodeSelector: null
    status:
      lastVersion: 0
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: mytest-service
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      strategy:
        resources: {}
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mytest-service
            from:
              kind: ImageStreamTag
              name: 'mytest-service:latest'
      replicas: 1
      test: false
      selector:
        app: placeholder-app-label-d46881878f594a2dadfd963843452aab
        deploymentconfig: mytest-service
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: placeholder-app-label-d46881878f594a2dadfd963843452aab
            deploymentconfig: mytest-service
        spec:
          containers:
            - name: mytest-service
              image: 'mytest-service:latest'
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
                - containerPort: 8778
                  protocol: TCP
              resources: {}
              env:
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: uri
                - name: DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: user
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mytest-database-bind
                      key: password
    status:
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      updatedReplicas: 0
      availableReplicas: 0
      unavailableReplicas: 0
  - kind: Service
    apiVersion: v1
    metadata:
      name: mytest-service
      creationTimestamp: null
      labels:
        app: mytest
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: 8443-tcp
          protocol: TCP
          port: 8443
          targetPort: 8443
        - name: 8778-tcp
          protocol: TCP
          port: 8778
          targetPort: 8778
      selector:
        app: placeholder-app-label-d46881878f594a2dadfd963843452aab
        deploymentconfig: mytest-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Route
    metadata:
      name: mytest-route
      labels:
        app: mytest
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: mytest-service
